# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - b4ds

name:  $[format('{0:yyyyMMdd\-HHmmss}', pipeline.startTime)]

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  CURRENT_DATE: $[format('{0:yyyyMMdd\-HHmmss}', pipeline.startTime)]
  REPOSITORY_NAME: $(Build.Repository.Name)
  COMMIT_TAG: $(git log --format=%h -1)

steps:
- script: |
    curl -L https://github.com/devkitPro/pacman/releases/download/devkitpro-pacman-1.0.1/devkitpro-pacman.deb -o pacman.deb
    sudo apt update
    sudo apt install p7zip-full haveged
    sudo dpkg -i pacman.deb
    sudo dkp-pacman -Sy
    sudo dkp-pacman -S nds-dev --noconfirm
  displayName: 'Setup environment'
  
- script: |
    export DEVKITPRO="/opt/devkitpro"
    export DEVKITARM="/opt/devkitpro/devkitARM"
    make package-nightly
    
    echo '##vso[task.setvariable variable=COMMIT_TAG]'$(git log --format=%h -1)
    echo '##vso[task.setvariable variable=COMMIT_MESSAGE]'$(git log --pretty=format:"%an - %s" -1)
  displayName: 'Build B4DS'

- script: |
    mkdir bin/TWiLightMenu/
    printf $(COMMIT_TAG) >> bin/TWiLightMenu/nightly-bootstrap.ver
    mv bin/ B4DS/
    7z a B4DS.7z B4DS/
    cp B4DS.7z $(Build.ArtifactStagingDirectory)/B4DS.7z
  displayName: 'Pack 7z'

- script: |    
    export COMMIT_TAG="$(git log --format=%h -1)"
    git config --global user.email "flamekat54@aol.com"
    git config --global user.name "TWLBot"
    git clone https://$GITHUB_TOKEN@github.com/TWLBot/Builds.git
    cd Builds/extras
    cp ../../B4DS.7z B4DS.7z
    git stage .
    git commit -m "nds-bootstrap for DS (B4DS) | $COMMIT_TAG"
    git push origin master
    git tag v$CURRENT_DATE
    echo '##vso[task.setvariable variable=TWLBOT_COMMIT]'$(git log -1 --format="%H")
  displayName: "Commit to TWLBot/Builds (/extras)"
  
- script: |
    curl -o send.sh https://raw.githubusercontent.com/DS-Homebrew/discord-webhooks/master/send-azure.sh
    chmod +x send.sh
    ./send.sh success $WEBHOOK_URL
  condition: succeeded()
  displayName: 'Send success webhook'

- script: |
    curl -o send.sh https://raw.githubusercontent.com/DS-Homebrew/discord-webhooks/master/send-azure.sh
    chmod +x send.sh
    ./send.sh failure $WEBHOOK_URL
  condition: failed()
  displayName: 'Send failure webhook'
