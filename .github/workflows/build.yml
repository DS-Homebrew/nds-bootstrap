name: Build nds-bootstrap

on:
  push:
    branches: ["*"]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: ["*"]
    paths-ignore:
      - 'README.md'
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm
    name: Build with Docker using devkitARM
    outputs:
      commit_tag: ${{ steps.vars.outputs.commit_tag }}
      commit_hash: ${{ steps.vars.outputs.commit_hash }}
      author_name: ${{ steps.vars.outputs.author_name }}
      committer_name: ${{ steps.vars.outputs.committer_name }}
      commit_subject: ${{ steps.vars.outputs.commit_subject }}
      commit_message: ${{ steps.vars.outputs.commit_message }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v1
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install p7zip-full gcc -y

          sudo gcc lzss.c -o /opt/devkitpro/tools/bin/lzss
      - name: Build nightly
        if: ${{ !startsWith(github.ref, 'refs/tags') }}
        run: make package-nightly
      - name: Build release
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: make package-release
      - name: Set variables
        id: vars
        run: |
          echo ::set-output name=commit_tag::$(git describe --abbrev=0 --tags)
          echo ::set-output name=commit_hash::$(git log --format=%h -1)

          # Webhook info
          echo ::set-output name=author_name::$(git log -1 "$GITHUB_SHA" --pretty="%aN")
          echo ::set-output name=committer_name::$(git log -1 "$GITHUB_SHA" --pretty="%cN")
          echo ::set-output name=commit_subject::$(git log -1 "$GITHUB_SHA" --pretty="%s")
          echo ::set-output name=commit_message::$(git log -1 "$GITHUB_SHA" --pretty="%b")
      - name: Pack 7z nightly
        if: ${{ !startsWith(github.ref, 'refs/tags') }}
        run: |
          mkdir bin/TWiLightMenu/
          printf "${{ steps.vars.outputs.commit_hash }}\n" >> bin/TWiLightMenu/nightly-bootstrap.ver
          mv bin/ nds-bootstrap/
          7z a nds-bootstrap.7z nds-bootstrap/

          mkdir -p ~/artifacts
          cp nds-bootstrap.7z ~/artifacts
      - name: Pack 7z release
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: |
          printf "Release ${{ steps.vars.outputs.commit_tag }}\n" >> bin/release-bootstrap.ver
          cd bin
          7z a nds-bootstrap.7z .
          7z a nds-bootstrap.zip .

          mkdir -p ~/artifacts
          cp nds-bootstrap.7z ~/artifacts
          cp nds-bootstrap.zip ~/artifacts
      - name: Publish build to GH Actions
        uses: actions/upload-artifact@v2
        with:
          path: ~/artifacts/*
          name: build